"code" = "Code"))
#RENAME dbo_Eloket (OK)####
colnames(dbo_Eloket)
dbo_Eloket <- rename(dbo_Eloket, c(
"id" = "ID",
"voornaam_auteur" = "VoornaamAuteur",
"achternaam_auteur" = "AchternaamAuteur",
"versie_datum" = "VersieDatum",
"gecontroleerdanb" = "GecontroleerdANB",
"gecontroleerdinbo" = "GecontroleerdINBO",
"rapport_status_id" = "RapportStatusID",
"meldingsformulier_id" = "MeldingsformulierID"))
#RENAME dbo_Diersoort (OK)####
dbo_Diersoort <- rename(dbo_Diersoort, c(
"id" = "Id",
"value" = "Value",
"code" = "Code",
"autopsies_visible" = "AutopsiesVisible"
))
#RENAME dbo_RapportStatus (OK)####
colnames(dbo_RapportStatus)
dbo_RapportStatus <- rename(dbo_RapportStatus, c(
"id" = "Id",
"value" = "Value",
"code" = "Code"))
#RENAME dbo_Identificatie (OK)####
colnames(dbo_Identificatie)
dbo_Identificatie <- rename(dbo_Identificatie, c(
"id" = "Id",
"ea_nummer" = "EaNummer",
"ea_nummer_oud" = "EaNummerOud",
"gegevens_openbaar" = "GegevensOpenbaar",
"label_nummer" = "LabelNummer",
"label_referentie" = "LabelReferentie",
"weefsel_beschikbaar" = "WeefselBeschikbaar",
"voortplantingsorganen_aanwezig" = "VoortplantingsorganenAanwezig",
"opmerkingen" = "Opmerkingen",
"opmerkingen_laboratorium" = "OpmerkingenLaboratorium",
"diersoort_id" = "DiersoortID",
"doodsoorzaak_id" = "DoodsoorzaakID",
"contact_persoon_id" = "ContactPersoonID",
"tussentijdse_opslag_id" = "TussentijdseOpslagID",
"opslagmethode_id" = "OpslagmethodeID",
"retournering" = "Retournering",
"geslacht_id" = "GeslachtID",
"latest_operation_time"  = "LatestOperationTime",
"latest_operation_user" = "LatestOperationUser",
"meldingsformulier_id" = "MeldingsformulierId"
))
#RENAME dbo_Staal (OK)####
colnames(dbo_Staal)
dbo_Staal <- rename(dbo_Staal, c(
"id" = "Id",
"ea_nummer" = "EaNummer",
"nummer" = "Nummer",
"staal_type" = "StaalType",
"identificatie_id" = "IdentificatieID"
))
#RENAME dbo_Leeftijd (OK)####
colnames(dbo_Leeftijd)
dbo_Leeftijd <- rename(dbo_Leeftijd, c(
"id" = "Id",
"value" = "Value",
"min_leeftijd" = "minLeeftijd",
"max_leeftijd" = "maxLeeftijd",
"diersoort_id" = "DiersoortID",
"code" = "Code"
))
#RENAME dbo_Doodsoorzaak (OK)####
colnames(dbo_Doodsoorzaak)
dbo_Doodsoorzaak <- rename(dbo_Doodsoorzaak, c(
"id" = "Id",
"value" = "Value"
))
#RENAME dbo_Vindplaats (OK)####
colnames(dbo_Vindplaats)
dbo_Vindplaats <- rename(dbo_Vindplaats, c(
"id" = "Id",
"ea_nummer" = "EaNummer",
"locatie_beschrijving" = "LocatieBeschrijving",
"breedtegraad" = "Breedtegraad",
"lengtegraad" = "Lengtegraad",
"grondgebied_id" = "GrondgebiedID",
"identificatie_id" = "IdentificatieID"))
#RENAME dbo_Onderkaak (OK)####
colnames(dbo_Onderkaak)
dbo_Onderkaak <- rename(dbo_Onderkaak, c(
"id" = "Id",
"ea_nummer" = "EaNummer",
"datum" = "Datum",
"beschadigd" = "Beschadigd",
"leeftijd_id" = "LeeftijdID",
"leeftijd_maanden" = "LeeftijdMaanden",
"lengte_mm" = "LengteMm",
"staal_id" = "StaalID",
"opmerkingen" = "Opmerkingen"
))
#EINDE RENAMES####
# 2. Gegevens selecteren
# --------------------------------------------------------------------------------------------------------------------------
# 2.1. De gegevens van het meldingsformulier goed krijgen
# In de tabel dbo_Meldingsformulier zitten zowel gegevens die van het e-loket komen
# als gegevens die rechtstreeks ingevoerd werden in de backoffice.
# Van die die van het e-loket komen, mag enkel de laatste versie behouden blijven en
# daarna moeten de afgekeurde er uit gegooid worden.
# de basisgegevens zitten in dbo_Meldingsformulier
# om de status na te kijken moet je de tabel dbo_Eloket koppelen
temp1 <- merge(dbo_Meldingsformulier, dbo_Eloket[,c("ID","MeldingsformulierID", "RapportStatusID")], by.x = "ID", by.y = "MeldingsformulierID", all.x = TRUE)
#14578 Records
#9/6/2016: 15.812 records
temp1$LabelNummer <- as.character(temp1$LabelNummer)
# ook is er nog een fout label bij Thomas Debonnet:
subset(temp1, ID == 5434)
temp1$LabelNummer[temp1$ID == 5434] <- "ANB-2014-WILD ZWIJN002066"
# ook is er nog een fout labels Voeren: zie email Bert Verbist 3/6/2016:
# Er is een fout labelnummer ingegeven omdat het juiste labelnummer nog niet in de keuzelijst stond. (Ipv dat laatste te melden vult men dan maar wat in, grrr)
# Voor 54703 is het labelnummer 001167
# Voor 54704 is het labelnummer 001168
subset(temp1, AnbId == 54703)
temp1$LabelNummer[temp1$AnbId == 54703] <- "ANB-2015-WILD ZWIJN001167"
subset(temp1, AnbId == 54704)
temp1$LabelNummer[temp1$AnbId == 54704] <- "ANB-2015-WILD ZWIJN001168"
# Nu opkuisen (teveel kolommen die we niet nodig hebben)
str(temp1)
temp1$IndienerID <- NULL
temp1$SchutterID <- NULL
temp1$NummerAfschotplan <- NULL
# temp1$BreedtegraadWGS84 <- NULL #-> deze heb je nodig om de postcode te berekenen
# temp1$LengtegraadWGS84 <- NULL #-> deze heb je nodig om de postcode te berekenen
temp1$GroepID <- NULL
temp1$Groepsgrootte <- NULL #-> voorlopig niet nodig
temp1$AantalEmbryosOnbekend <- NULL
temp1$AantalEmbryos <- NULL
temp1$OnderkaaklengteLinks <- NULL # enkel ree
temp1$OnderkaaklengteRechts <- NULL # enkel ree
temp1$OndertekenaarAchternaam <- NULL
temp1$OndertekenaarVoornaam <- NULL
temp1$LatestOperationTime <- NULL
temp1$LatestOperationUser <- NULL
temp1$JachtmethodeID <- NULL #-> voorlopig niet nodig
temp1$WettelijkKaderID <- NULL #-> voorlopig niet nodig
temp1$nauwkeurigheid_straal <- NULL #-> voorlopig niet nodig
temp1$nauwkeurigheid_id   <- NULL #-> voorlopig niet nodig
# nog probleem van dubbel ID kolom maar dat wordt er later uitgehaald.
# Nog nodig voor vergelijking #records met ANB als oorsprong:
# remove(dbo_Eloket)
# Voorlopig niet nodig:
remove(dbo_Groep)
remove(dbo_Jachtmethode)
remove(dbo_WettelijkKader)
View(temp1)
test1 <- subset(temp1, is.na(temp1$AnbId))
View(test1)
View(dbo_Eloket)
# Best aanduiden of het van ANB komt of van INBO:
temp1$Oorsprong[!is.na(temp1$AnbId)] <- "ANB"
temp1$Oorsprong[is.na(temp1$AnbId)] <- "INBO"
test1 <- subset(temp1, is.na(temp1$AnbId))
table(temp1$Oorsprong)
summary(temp1$LaatsteVersie)
table(temp1$LaatsteVersie, exclude = NULL)
temp1 <- subset(temp1, LaatsteVersie == 1)
table(temp1$Oorsprong)
# Script voor de gegevens van de wildrapporten uit de BackOffice te halen
library(plyr)
library(reshape) #voor de functie rename
library(ggplot2)
library(XLConnect)
library(RPostgreSQL)
#Run connect batch file first
drv <- dbDriver("PostgreSQL")
#Thomas
verbinding <- dbConnect(drv, dbname="autopsies",host="127.0.0.1",port=5432,user="thomas",password="lQzgDqS5kFiXdUFTqw9UorObsL0WBVXLwZONoFWtIs" )
#Sander
verbinding <- dbConnect(drv, dbname="autopsies",host="127.0.0.1",port=5432,user="sander",password="lQzgDqS5kFiXdUFTqw9UorObsL0WBVXLwZONoFWtIs" )
#jim => Poorten en wachtwoord nakijken
verbinding <- dbConnect(drv, dbname="autopsies",host="127.0.0.1",port=5432,user="jim",password="lQzgDqS5kFiXdUFTqw9UorObsL0WBVXLwZONoFWtIs" )
# Haal relevante tabellen op:
# voor de meldingsformulieren grofwild:
dbo_Meldingsformulier <- dbReadTable(verbinding, c("public", "meldingsformulier"))
dbo_Groep <- dbReadTable(verbinding, c("public", "groep"))
dbo_Leeftijd <- dbReadTable(verbinding, c("public", "leeftijd"))
dbo_Geslacht <- dbReadTable(verbinding, c("public", "geslacht"))
dbo_Jachtmethode <- dbReadTable(verbinding, c("public", "jachtmethode"))
dbo_WettelijkKader <- dbReadTable(verbinding, c("public", "wettelijk_kader"))
dbo_Eloket <- dbReadTable(verbinding, c("public", "eloket"))
dbo_Diersoort <- dbReadTable(verbinding, c("public", "diersoort"))
dbo_RapportStatus <- dbReadTable(verbinding, c("public", "rapport_status"))
# voor de identificaties grofwild:
dbo_Identificatie <- dbReadTable(verbinding, c("public", "identificatie"))
dbo_Staal <- dbReadTable(verbinding, c("public", "staal"))
dbo_Leeftijd <- dbReadTable(verbinding, c("public", "leeftijd"))
dbo_Geslacht <- dbReadTable(verbinding, c("public", "geslacht"))
dbo_Diersoort <- dbReadTable(verbinding, c("public", "diersoort"))
dbo_Doodsoorzaak <- dbReadTable(verbinding, c("public", "doodsoorzaak"))
dbo_Vindplaats <- dbReadTable(verbinding, c("public", "vindplaats"))
dbo_Onderkaak <- dbReadTable(verbinding, c("public", "onderkaak"))
# Close PostgreSQL connection
dbDisconnect(verbinding)
#  #RENAME OLD colnames -> NEW Colnames####
# Probleem: door omzetten van de servers is alles nu klein letter geworden...
#--> ipv alle scripts aan te passen pas ik dit nu aan in de tabellen zelf:
library(reshape) #voor de functie rename
#RENAME dbo_Meldingsformulier (OK)####
colnames(dbo_Meldingsformulier)
dbo_Meldingsformulier <- rename(dbo_Meldingsformulier, c(
"id" = "ID",
"anb_id" = "AnbId",
"versie" = "Versie",
"laatste_versie" = "LaatsteVersie",
"diersoort_id" = "DiersoortID",
"indiener_id" = "IndienerID",
"schutter_id" = "SchutterID",
"nummer_afschotplan" = "NummerAfschotplan",
"afschot_datum" = "AfschotDatum",
"afschot_tijdstip" = "AfschotTijdstip",
"postcode_afschot_locatie" = "PostcodeAfschotLocatie",
"gemeente_afschot_locatie" = "GemeenteAfschotLocatie",
"breedtegraadwgs84" = "BreedtegraadWGS84",
"lengtegraadwgs84" = "LengtegraadWGS84",
"label_nummer" = "LabelNummer",
"groep_id" = "GroepID",
"groepsgrootte" = "Groepsgrootte",
"leeftijd_id" = "LeeftijdID",
"geslacht_id" = "GeslachtID",
"aantal_embryos_onbekend" = "AantalEmbryosOnbekend",
"aantal_embryos" = "AantalEmbryos",
"ontweid_gewicht" = "OntweidGewicht",
"onderkaaklengte_links" = "OnderkaaklengteLinks",
"onderkaaklengte_rechts" = "OnderkaaklengteRechts",
"opmerkingen" = "Opmerkingen",
"jachtmethode_id" = "JachtmethodeID",
"wettelijk_kader_id" = "WettelijkKaderID",
"ondertekening_datum" = "OndertekeningDatum",
"ondertekenaar_achternaam" = "OndertekenaarAchternaam",
"ondertekenaar_voornaam" = "OndertekenaarVoornaam",
"latest_operation_time" = "LatestOperationTime",
"latest_operation_user" = "LatestOperationUser"))
#RENAME dbo_Groep (OK)####
colnames(dbo_Groep)
dbo_Groep <- rename(dbo_Groep, c(
"id" = "Id",
"value"= "Value",
"code"="Code"))
#RENAME dbo_Leeftijd (OK)####
colnames(dbo_Leeftijd)
dbo_Leeftijd <- rename(dbo_Leeftijd, c(
"id" = "Id",
"value" = "Value",
"min_leeftijd" = "minLeeftijd",
"max_leeftijd" = "maxLeeftijd",
"diersoort_id" = "DiersoortID",
"code" = "Code"))
#RENAME dbo_Geslacht (OK)####
colnames(dbo_Geslacht)
dbo_Geslacht <- rename(dbo_Geslacht, c(
"id" = "Id",
"value" = "Value",
"code" = "Code"))
#RENAME dbo_Jachtmethode (OK)####
colnames(dbo_Jachtmethode)
dbo_Jachtmethode <- rename(dbo_Jachtmethode, c(
"id" = "Id",
"value" = "Value",
"code" = "Code"))
#RENAME dbo_WettelijkKader (OK)####
colnames(dbo_WettelijkKader)
dbo_WettelijkKader <- rename(dbo_WettelijkKader, c(
"id" = "Id",
"value" = "Value",
"code" = "Code"))
#RENAME dbo_Eloket (OK)####
colnames(dbo_Eloket)
dbo_Eloket <- rename(dbo_Eloket, c(
"id" = "ID",
"voornaam_auteur" = "VoornaamAuteur",
"achternaam_auteur" = "AchternaamAuteur",
"versie_datum" = "VersieDatum",
"gecontroleerdanb" = "GecontroleerdANB",
"gecontroleerdinbo" = "GecontroleerdINBO",
"rapport_status_id" = "RapportStatusID",
"meldingsformulier_id" = "MeldingsformulierID"))
#RENAME dbo_Diersoort (OK)####
dbo_Diersoort <- rename(dbo_Diersoort, c(
"id" = "Id",
"value" = "Value",
"code" = "Code",
"autopsies_visible" = "AutopsiesVisible"
))
#RENAME dbo_RapportStatus (OK)####
colnames(dbo_RapportStatus)
dbo_RapportStatus <- rename(dbo_RapportStatus, c(
"id" = "Id",
"value" = "Value",
"code" = "Code"))
#RENAME dbo_Identificatie (OK)####
colnames(dbo_Identificatie)
dbo_Identificatie <- rename(dbo_Identificatie, c(
"id" = "Id",
"ea_nummer" = "EaNummer",
"ea_nummer_oud" = "EaNummerOud",
"gegevens_openbaar" = "GegevensOpenbaar",
"label_nummer" = "LabelNummer",
"label_referentie" = "LabelReferentie",
"weefsel_beschikbaar" = "WeefselBeschikbaar",
"voortplantingsorganen_aanwezig" = "VoortplantingsorganenAanwezig",
"opmerkingen" = "Opmerkingen",
"opmerkingen_laboratorium" = "OpmerkingenLaboratorium",
"diersoort_id" = "DiersoortID",
"doodsoorzaak_id" = "DoodsoorzaakID",
"contact_persoon_id" = "ContactPersoonID",
"tussentijdse_opslag_id" = "TussentijdseOpslagID",
"opslagmethode_id" = "OpslagmethodeID",
"retournering" = "Retournering",
"geslacht_id" = "GeslachtID",
"latest_operation_time"  = "LatestOperationTime",
"latest_operation_user" = "LatestOperationUser",
"meldingsformulier_id" = "MeldingsformulierId"
))
#RENAME dbo_Staal (OK)####
colnames(dbo_Staal)
dbo_Staal <- rename(dbo_Staal, c(
"id" = "Id",
"ea_nummer" = "EaNummer",
"nummer" = "Nummer",
"staal_type" = "StaalType",
"identificatie_id" = "IdentificatieID"
))
#RENAME dbo_Leeftijd (OK)####
colnames(dbo_Leeftijd)
dbo_Leeftijd <- rename(dbo_Leeftijd, c(
"id" = "Id",
"value" = "Value",
"min_leeftijd" = "minLeeftijd",
"max_leeftijd" = "maxLeeftijd",
"diersoort_id" = "DiersoortID",
"code" = "Code"
))
#RENAME dbo_Doodsoorzaak (OK)####
colnames(dbo_Doodsoorzaak)
dbo_Doodsoorzaak <- rename(dbo_Doodsoorzaak, c(
"id" = "Id",
"value" = "Value"
))
#RENAME dbo_Vindplaats (OK)####
colnames(dbo_Vindplaats)
dbo_Vindplaats <- rename(dbo_Vindplaats, c(
"id" = "Id",
"ea_nummer" = "EaNummer",
"locatie_beschrijving" = "LocatieBeschrijving",
"breedtegraad" = "Breedtegraad",
"lengtegraad" = "Lengtegraad",
"grondgebied_id" = "GrondgebiedID",
"identificatie_id" = "IdentificatieID"))
#RENAME dbo_Onderkaak (OK)####
colnames(dbo_Onderkaak)
dbo_Onderkaak <- rename(dbo_Onderkaak, c(
"id" = "Id",
"ea_nummer" = "EaNummer",
"datum" = "Datum",
"beschadigd" = "Beschadigd",
"leeftijd_id" = "LeeftijdID",
"leeftijd_maanden" = "LeeftijdMaanden",
"lengte_mm" = "LengteMm",
"staal_id" = "StaalID",
"opmerkingen" = "Opmerkingen"
))
#EINDE RENAMES####
# 2. Gegevens selecteren
# --------------------------------------------------------------------------------------------------------------------------
# 2.1. De gegevens van het meldingsformulier goed krijgen
# In de tabel dbo_Meldingsformulier zitten zowel gegevens die van het e-loket komen
# als gegevens die rechtstreeks ingevoerd werden in de backoffice.
# Van die die van het e-loket komen, mag enkel de laatste versie behouden blijven en
# daarna moeten de afgekeurde er uit gegooid worden.
# de basisgegevens zitten in dbo_Meldingsformulier
# om de status na te kijken moet je de tabel dbo_Eloket koppelen
temp1 <- merge(dbo_Meldingsformulier, dbo_Eloket[,c("ID","MeldingsformulierID", "RapportStatusID")], by.x = "ID", by.y = "MeldingsformulierID", all.x = TRUE)
#14578 Records
#9/6/2016: 15.812 records
temp1$LabelNummer <- as.character(temp1$LabelNummer)
# ook is er nog een fout label bij Thomas Debonnet:
subset(temp1, ID == 5434)
temp1$LabelNummer[temp1$ID == 5434] <- "ANB-2014-WILD ZWIJN002066"
# ook is er nog een fout labels Voeren: zie email Bert Verbist 3/6/2016:
# Er is een fout labelnummer ingegeven omdat het juiste labelnummer nog niet in de keuzelijst stond. (Ipv dat laatste te melden vult men dan maar wat in, grrr)
# Voor 54703 is het labelnummer 001167
# Voor 54704 is het labelnummer 001168
subset(temp1, AnbId == 54703)
temp1$LabelNummer[temp1$AnbId == 54703] <- "ANB-2015-WILD ZWIJN001167"
subset(temp1, AnbId == 54704)
temp1$LabelNummer[temp1$AnbId == 54704] <- "ANB-2015-WILD ZWIJN001168"
# Nu opkuisen (teveel kolommen die we niet nodig hebben)
str(temp1)
temp1$IndienerID <- NULL
temp1$SchutterID <- NULL
temp1$NummerAfschotplan <- NULL
# temp1$BreedtegraadWGS84 <- NULL #-> deze heb je nodig om de postcode te berekenen
# temp1$LengtegraadWGS84 <- NULL #-> deze heb je nodig om de postcode te berekenen
temp1$GroepID <- NULL
temp1$Groepsgrootte <- NULL #-> voorlopig niet nodig
temp1$AantalEmbryosOnbekend <- NULL
temp1$AantalEmbryos <- NULL
temp1$OnderkaaklengteLinks <- NULL # enkel ree
temp1$OnderkaaklengteRechts <- NULL # enkel ree
temp1$OndertekenaarAchternaam <- NULL
temp1$OndertekenaarVoornaam <- NULL
temp1$LatestOperationTime <- NULL
temp1$LatestOperationUser <- NULL
temp1$JachtmethodeID <- NULL #-> voorlopig niet nodig
temp1$WettelijkKaderID <- NULL #-> voorlopig niet nodig
temp1$nauwkeurigheid_straal <- NULL #-> voorlopig niet nodig
temp1$nauwkeurigheid_id   <- NULL #-> voorlopig niet nodig
# nog probleem van dubbel ID kolom maar dat wordt er later uitgehaald.
# Nog nodig voor vergelijking #records met ANB als oorsprong:
# remove(dbo_Eloket)
# Voorlopig niet nodig:
remove(dbo_Groep)
remove(dbo_Jachtmethode)
remove(dbo_WettelijkKader)
temp1$Oorsprong[!is.na(temp1$AnbId)] <- "ANB"
temp1$Oorsprong[is.na(temp1$AnbId)] <- "INBO"
test1 <- subset(temp1, is.na(temp1$AnbId))
table(temp1$Oorsprong)
View(dbo_Eloket)
View(temp1)
View(dbo_Meldingsformulier)
View(dbo_Eloket)
test2 <- subset(dbo_Eloket, is.na(dbo_Eloket$MeldingsformulierID))
17218+1167
temp1 <- merge(dbo_Meldingsformulier, dbo_Eloket[,c("ID","MeldingsformulierID", "RapportStatusID")], by.x = "ID", by.y = "MeldingsformulierID", all.x = TRUE)
#14578 Records
#9/6/2016: 15.812 records
temp1$LabelNummer <- as.character(temp1$LabelNummer)
# ook is er nog een fout label bij Thomas Debonnet:
subset(temp1, ID == 5434)
temp1$LabelNummer[temp1$ID == 5434] <- "ANB-2014-WILD ZWIJN002066"
# ook is er nog een fout labels Voeren: zie email Bert Verbist 3/6/2016:
# Er is een fout labelnummer ingegeven omdat het juiste labelnummer nog niet in de keuzelijst stond. (Ipv dat laatste te melden vult men dan maar wat in, grrr)
# Voor 54703 is het labelnummer 001167
# Voor 54704 is het labelnummer 001168
subset(temp1, AnbId == 54703)
temp1$LabelNummer[temp1$AnbId == 54703] <- "ANB-2015-WILD ZWIJN001167"
subset(temp1, AnbId == 54704)
temp1$LabelNummer[temp1$AnbId == 54704] <- "ANB-2015-WILD ZWIJN001168"
# Nu opkuisen (teveel kolommen die we niet nodig hebben)
str(temp1)
temp1$IndienerID <- NULL
temp1$SchutterID <- NULL
temp1$NummerAfschotplan <- NULL
# temp1$BreedtegraadWGS84 <- NULL #-> deze heb je nodig om de postcode te berekenen
# temp1$LengtegraadWGS84 <- NULL #-> deze heb je nodig om de postcode te berekenen
temp1$GroepID <- NULL
temp1$Groepsgrootte <- NULL #-> voorlopig niet nodig
temp1$AantalEmbryosOnbekend <- NULL
temp1$AantalEmbryos <- NULL
temp1$OnderkaaklengteLinks <- NULL # enkel ree
temp1$OnderkaaklengteRechts <- NULL # enkel ree
temp1$OndertekenaarAchternaam <- NULL
temp1$OndertekenaarVoornaam <- NULL
temp1$LatestOperationTime <- NULL
temp1$LatestOperationUser <- NULL
temp1$JachtmethodeID <- NULL #-> voorlopig niet nodig
temp1$WettelijkKaderID <- NULL #-> voorlopig niet nodig
temp1$nauwkeurigheid_straal <- NULL #-> voorlopig niet nodig
temp1$nauwkeurigheid_id   <- NULL #-> voorlopig niet nodig
# nog probleem van dubbel ID kolom maar dat wordt er later uitgehaald.
# Nog nodig voor vergelijking #records met ANB als oorsprong:
# remove(dbo_Eloket)
# Voorlopig niet nodig:
remove(dbo_Groep)
remove(dbo_Jachtmethode)
remove(dbo_WettelijkKader)
# Best aanduiden of het van ANB komt of van INBO:
temp1$Oorsprong[!is.na(temp1$AnbId)] <- "ANB"
temp1$Oorsprong[is.na(temp1$AnbId)] <- "INBO"
test1 <- subset(temp1, is.na(temp1$AnbId))
table(temp1$Oorsprong)
#-> aantal ANB moet gelijk zijn aan het aantal records van dbo_Eloket
# 18/04/2016: 8575 v 8575 in dbo_Eloket -> OK
# 22/04/2016: 9327 v 9327 in dbo_Eloket -> OK
# 23/05/2016: 10195 v 10195 in dbo_Eloket -> OK
# 09/06/2016: ANB: 10.494 <-> INBO: 5.318
# 18/10/2016: ANB: 12.762 <-> INBO: 5.439
# Nu enkel de laatste versie van het e-loket overhouden. Indien ingevuld door INBO krijgt dit ook een 1
summary(temp1$LaatsteVersie)
table(temp1$LaatsteVersie, exclude = NULL)
temp1 <- subset(temp1, LaatsteVersie == 1)
#25/04/2016: 14.508 records
#23/05/2016: 15.428 records
#09/06/2016: 15.729 records
#18/10/2016: 18.086 records
# hierdoor verandert plots de dubbel ID-kolom waardoor je deze nu wel kan verwijderen:
temp1$ID.1 <- NULL
# Vervolgens de afgekeurde van het e-loket verwijderen:
table(temp1$RapportStatusID, exclude = NULL) #-> enkel 1 (afgekeurde) en 2 (ingediende)
#-> de NA's zijn die dat ingevuld werden door INBO
temp1 <- subset(temp1, RapportStatusID == 2 | is.na(RapportStatusID))
#25/04/2016: 14.432 records
#23/05/2016: 15.350 records
#09/06/2016: 15.650 records
#18/10/2016: 17.986 records
remove(dbo_RapportStatus)
devtools::install_github("inbo/woonuitbreidingsgebieden", subdir = "woonuitbreidingsgebieden")
library("reportingGrofwild")
library(zoo)
library(plyr)
library(dplyr)
library(tidyr)
checklist_location <- "https://raw.githubusercontent.com/inbo/alien-species-checklist/master/data/processed/aggregated-checklist.tsv"
checklist <- read.csv(checklist_location, sep = "\t")
setwd("~/GitHub/natuurindicatoren")
